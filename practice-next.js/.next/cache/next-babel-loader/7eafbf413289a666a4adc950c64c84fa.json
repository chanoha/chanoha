{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport { Layout, PostLink } from './shared';\n\nvar Index = function Index(props) {\n  return __jsx(Layout, null, __jsx(\"p\", null, \"This is the index page\"), __jsx(\"ul\", null, props.posts.map(function (post) {\n    return __jsx(\"li\", {\n      key: post.id\n    }, __jsx(Link, {\n      as: \"/p/\".concat(post.id),\n      href: \"/post?id=\".concat(post.id)\n    }, __jsx(\"a\", null, post.title)));\n  })));\n};\n\nIndex.getInitialProps = function _callee() {\n  var res, posts;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('https://jsonplaceholder.typicode.com/posts'));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          posts = _context.sent;\n          console.log(\"posts count: \".concat(posts.length));\n          return _context.abrupt(\"return\", {\n            posts: posts\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Index;","map":null,"metadata":{},"sourceType":"module"}
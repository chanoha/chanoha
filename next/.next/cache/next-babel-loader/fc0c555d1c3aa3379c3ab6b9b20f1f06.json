{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport { Layout, PostLink } from './shared';\n\nvar Index = function Index(props) {\n  return __jsx(Layout, null, __jsx(\"p\", null, \"This is the index page\"), __jsx(\"ul\", null, props.posts.map(function (post) {\n    return __jsx(\"li\", {\n      key: post.id\n    }, __jsx(Link, {\n      as: \"/p/\".concat(post.id),\n      href: \"/post?id=\".concat(post.id)\n    }, __jsx(\"a\", null, post.title)));\n  })));\n};\n\nIndex.getInitialProps = function _callee() {\n  var res, posts;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('https://jsonplaceholder.typicode.com/posts'));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          posts = _context.sent;\n          console.log(\"posts count: \".concat(posts.length));\n          return _context.abrupt(\"return\", {\n            posts: posts\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/takashi/Documents/design/github/chanoha.github.io/practice-next.js/pages/index.js"],"names":["Link","fetch","Layout","PostLink","Index","props","posts","map","post","id","title","getInitialProps","res","json","console","log","length"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,UAAjC;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD;AAAA,SACZ,MAAC,MAAD,QACE,0CADF,EAEE,kBACGA,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgB,UAAAC,IAAI;AAAA,WACnB;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC;AAAd,OACE,MAAC,IAAD;AAAM,MAAA,EAAE,eAAQD,IAAI,CAACC,EAAb,CAAR;AAA2B,MAAA,IAAI,qBAAcD,IAAI,CAACC,EAAnB;AAA/B,OACE,iBAAID,IAAI,CAACE,KAAT,CADF,CADF,CADmB;AAAA,GAApB,CADH,CAFF,CADY;AAAA,CAAd;;AAeAN,KAAK,CAACO,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACJV,KAAK,CAAC,4CAAD,CADD;;AAAA;AAChBW,UAAAA,GADgB;AAAA;AAAA,2CAEFA,GAAG,CAACC,IAAJ,EAFE;;AAAA;AAEhBP,UAAAA,KAFgB;AAItBQ,UAAAA,OAAO,CAACC,GAAR,wBAA4BT,KAAK,CAACU,MAAlC;AAJsB,2CAMf;AAAEV,YAAAA,KAAK,EAALA;AAAF,WANe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AASA,eAAeF,KAAf","sourcesContent":["import Link from 'next/link'\nimport fetch from 'isomorphic-unfetch'\n\nimport { Layout, PostLink } from './shared'\n\nconst Index = (props) => (\n  <Layout>\n    <p>This is the index page</p>\n    <ul>\n      {props.posts.map(post => (\n        <li key={post.id}>\n          <Link as={`/p/${post.id}`} href={`/post?id=${post.id}`}>\n            <a>{post.title}</a>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  </Layout>\n)\n\nIndex.getInitialProps = async function() {\n  const res = await fetch('https://jsonplaceholder.typicode.com/posts');\n  const posts = await res.json()\n\n  console.log(`posts count: ${posts.length}`)\n\n  return { posts }\n}\n\nexport default Index"]},"metadata":{},"sourceType":"module"}